# Environment Variables Documentation

## Overview
This document provides a comprehensive guide to all environment variables required for the DOOR application, which integrates Polar for subscription payments and Supabase for backend services.

## Polar Environment Variables

### POLAR_ORGANIZATION_ID
- **Description**: Your unique Polar organization identifier
- **Where to find it**: In your Polar dashboard under Organization Settings
- **Format**: A string like "org_123456789"
- **Required for**: All Polar API interactions and webhook verification

### POLAR_ACCESS_TOKEN
- **Description**: API token used to authenticate requests to Polar's API
- **Where to find it**: In your Polar dashboard under Developer Settings > API Keys
- **Format**: A string starting with "pat_"
- **Required for**: Creating subscriptions, fetching subscription data, and other API operations

### POLAR_WEBHOOK_SECRET
- **Description**: Secret key used to verify webhook payloads from Polar
- **Where to find it**: In your Polar dashboard under Developer Settings > Webhooks
- **Format**: A string starting with "whsec_"
- **Required for**: Validating that webhook requests are genuinely from Polar

## Supabase Environment Variables

### SUPABASE_PROJECT_ID
- **Description**: The unique identifier for your Supabase project
- **Where to find it**: In your Supabase dashboard under Project Settings > General
- **Format**: A UUID string
- **Required for**: Identifying your project when using Supabase Management API

### SUPABASE_URL
- **Description**: The URL of your Supabase project
- **Where to find it**: In your Supabase dashboard under Project Settings > API
- **Format**: https://[project-id].supabase.co
- **Required for**: Server-side Supabase client initialization

### SUPABASE_ANON_KEY
- **Description**: Public API key with limited permissions
- **Where to find it**: In your Supabase dashboard under Project Settings > API
- **Format**: A long string starting with "eyJ"
- **Required for**: Server-side Supabase client initialization

### SUPABASE_SERVICE_KEY
- **Description**: Private API key with full admin rights to your database
- **Where to find it**: In your Supabase dashboard under Project Settings > API
- **Format**: A long string starting with "eyJ"
- **Required for**: Server-side operations that require elevated permissions

### NEXT_PUBLIC_SUPABASE_URL
- **Description**: Same as SUPABASE_URL, but exposed to the client
- **Where to find it**: Same as SUPABASE_URL
- **Format**: https://[project-id].supabase.co
- **Required for**: Client-side Supabase client initialization

### NEXT_PUBLIC_SUPABASE_ANON_KEY
- **Description**: Same as SUPABASE_ANON_KEY, but exposed to the client
- **Where to find it**: Same as SUPABASE_ANON_KEY
- **Format**: A long string starting with "eyJ"
- **Required for**: Client-side Supabase client initialization

## Setting Up Environment Variables

### Local Development
1. Create a `.env.local` file in the root of your project
2. Add all the environment variables listed above with their respective values
3. Restart your development server

### Production Deployment
1. Add these environment variables to your hosting platform's environment configuration
2. For Vercel: Go to Project Settings > Environment Variables
3. For Netlify: Go to Site Settings > Build & Deploy > Environment

## Verifying Environment Variables

To verify that your environment variables are correctly set up:

1. The application will show warnings if required environment variables are missing
2. You can check the Supabase connection by visiting the dashboard page
3. You can verify Polar integration by attempting to view subscription plans

## Troubleshooting

- If you see "Invalid API key" errors, check your POLAR_ACCESS_TOKEN
- If webhook events aren't being processed, verify your POLAR_WEBHOOK_SECRET
- If database operations fail, check your Supabase connection variables
- Remember that environment variables are case-sensitive

## Security Notes

- Never commit your `.env` files to version control
- The SUPABASE_SERVICE_KEY has admin privileges - keep it secure
- Rotate your API keys periodically for enhanced security
